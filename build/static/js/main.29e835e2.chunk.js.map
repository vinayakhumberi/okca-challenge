{"version":3,"sources":["utils/gameUtil.js","Components/GroupComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["getRandomNumberWithIn","min","max","Math","floor","random","randomizeTeams","data","length","start","newData","i","groupTeamsInTwo","teams","groups","push","splice","GroupComponent","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","timer","gameFinishTime","timerCount","winner","handleGameResults","bind","assertThisInitialized","handleGamePlay","props","gameStart","nextProps","clearInterval","_this2","setInterval","setState","round","matchId","react_default","a","createElement","className","concat","teamName","React","Component","App","quaterFinals","handleHigherGames","values","id","keys","defineProperty","_this3","latestGroup","map","batch","loopGroup","index","Components_GroupComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.29e835e2.chunk.js","sourcesContent":["import data from '../data/teams.json';\n\n\nexport const getRandomNumberWithIn = (min, max) => Math.floor(Math.random() * (max - min) + min);\n\nexport const randomizeTeams = () => {\n  const min = 0;\n  const max = data.length;\n  let start = getRandomNumberWithIn(min, max);\n  const newData = {};\n  for(let i = 0; i <= max ; i++, start++) {\n    newData[i] = data[start % max];\n  }\n  return newData;\n}\n\nexport const groupTeamsInTwo = teams => {\n  var groups = [];\n  while (teams.length) {\n    groups.push(teams.splice(0, 2));\n  }\n\n  return groups;\n}\n\nexport default {\n  randomizeTeams\n}","import React from 'react';\nimport './group.css';\nimport { getRandomNumberWithIn } from '../utils/gameUtil';\n\nclass GroupComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      timer: 0,\n      gameFinishTime: 5,\n      timerCount: null,\n      winner: -1\n    }\n    this.handleGameResults = this.handleGameResults.bind(this);\n    this.handleGamePlay = this.handleGamePlay.bind(this);\n  }\n  componentDidMount() {\n    this.handleGamePlay(this.props.gameStart);\n  }\n  componentWillReceiveProps(nextProps) {\n    if(this.props.gameStart !== nextProps.gameStart) {\n      this.handleGamePlay(nextProps.gameStart);\n    }\n  }\n  componentWillMount() {\n    clearInterval(this.state.timerCount);\n  }\n  handleGamePlay(gameStart) {\n    const gameFinishTime = getRandomNumberWithIn(5, 10);\n    const timerCount = gameStart && setInterval(() => {\n      if (this.state.timer < 10 && this.state.timer <= gameFinishTime) {\n        this.setState({\n          timer: this.state.timer + 1\n        });\n      } else {\n        clearInterval(timerCount);\n        this.handleGameResults();\n      }\n    }, 1000);\n    this.setState({\n      gameFinishTime,\n      timerCount\n    });\n  }\n  handleGameResults() {\n    const winner = this.props.data.length === 1 ? 0 : Math.round(Math.random());\n    const timerCount = clearInterval(this.state.timerCount);\n    this.props.handleGameResults(this.props.data[winner], this.props.matchId);\n    this.setState({\n      winner,\n      timerCount,\n    })\n  }\n  render() {\n    return (\n      <div className=\"group\">\n        <div className=\"group__left\">\n          <div className={`${this.state.winner === 0 ? 'win' : ''}`}>\n            {this.props.data[0].teamName}\n          </div>\n          {this.props.data[1] && <div className=\"vs\" >\n            Vs\n          </div>}\n          {this.props.data[1] && <div className={`${this.state.winner === 1 ? 'win' : ''}`}>\n            {this.props.data[1].teamName}\n          </div>}\n        </div>\n        <div className=\"group__right\">\n          <div>\n            {<br />}\n          </div>\n          {this.props.data[1] && <div className=\"counter\">\n            <b>\n              {this.state.timer}\n            </b>\n          </div>}\n          <div>\n            {<br />}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default GroupComponent;","import React, { Component } from 'react';\nimport './App.css';\nimport { randomizeTeams, groupTeamsInTwo } from './utils/gameUtil'\nimport GroupComponent from './Components/GroupComponent';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      teams: [randomizeTeams()],\n      groups: [],\n      quaterFinals: [ false, false, false, false ],\n      timer: null,\n    };\n    this.handleGameResults = this.handleGameResults.bind(this);\n    this.handleHigherGames = this.handleHigherGames.bind(this);\n  }\n  componentDidMount() {\n    this.setState({\n      groups: [groupTeamsInTwo(Object.values(this.state.teams[0]))]\n    })\n  }\n  handleGameResults(winner, matchId) {\n    let teams = this.state.teams;\n    if (!this.state.teams[this.state.groups.length]) {\n      teams.push({[matchId]: winner })\n    } else {\n      const id = this.state.teams.length - 1;\n      teams[id][matchId] = winner;\n      if ((Object.keys(teams[id]).length === this.state.groups[id - 1].length) && Object.keys(teams[id]).length !== 1) {\n        const groups = this.state.groups;\n        groups.push(groupTeamsInTwo(Object.values(this.state.teams[id])))\n        this.setState({\n          groups,\n        });\n        if (Object.keys(this.state.teams[id]).length <= 8) {\n          this.handleHigherGames();\n        }\n      }\n    }\n    this.setState({\n      teams,\n    });\n  }\n  handleHigherGames() {\n    const timer = setInterval(() => {\n      let quaterFinals = [true, false, false, false];\n      if (this.state.quaterFinals[0]) {\n        quaterFinals = [false, true, false, false];\n      } else if (this.state.quaterFinals[1]) {\n        quaterFinals = [false, false, true, false];\n      } else if (this.state.quaterFinals[2]) {\n        quaterFinals = [false, false, false, true];\n        clearInterval(timer);\n      } else {\n        quaterFinals = [false, false, false, false];\n      }\n      this.setState({\n        quaterFinals,\n        timer\n      });\n    }, 10000);\n\n    this.setState({\n      quaterFinals: [true, false, false, false],\n      timer\n    });\n  }\n  render() {\n    const latestGroup = this.state.groups.length - 1;\n    const teams = this.state.groups.map((batch, loopGroup) => {\n      return <div className=\"col\">{Object.keys(batch).map((id, index) => {\n        return <GroupComponent data={batch[id]} handleGameResults={this.handleGameResults} matchId={index} gameStart={(Object.keys(batch).length <= 4 && latestGroup === loopGroup && this.state.quaterFinals[index]) || (Object.keys(batch).length > 4)} />\n      })}</div>\n    });\n    return (\n      <div className=\"App\">\n        {teams}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}